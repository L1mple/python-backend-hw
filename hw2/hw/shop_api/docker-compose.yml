version: "3"

services:

  local:
    build:
      context: ..
      dockerfile: ./shop_api/Dockerfile
    restart: always
    ports:
      - 8080:8080
    environment:
      - APP_ROOT=/app
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=shop_db
      - DB_USER=shop_user
      - DB_PASSWORD=shop_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: always
    networks:
      - shop-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./settings/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    restart: always
    networks:
      - shop-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=shop_db
      - POSTGRES_USER=shop_user
      - POSTGRES_PASSWORD=shop_password
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - shop-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop_user -d shop_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  shop-network:
    driver: bridge

volumes:
  prometheus-data:
  postgres-data:
