services:

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: shop_db
      MYSQL_USER: shop_user
      MYSQL_PASSWORD: shop_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  shop-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - 8080:8080
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: shop_db
      MYSQL_USER: shop_user
      MYSQL_PASSWORD: shop_password
    depends_on:
      mysql:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./settings/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./settings/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./settings/grafana/shop-api-dashboard.json:/etc/grafana/provisioning/dashboards/shop-api-dashboard.json
    restart: always
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus
    volumes:
      - ./settings/prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    restart: always
    depends_on:
      - shop-api

volumes:
  mysql_data:
