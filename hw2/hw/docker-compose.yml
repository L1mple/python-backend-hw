services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-}
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PG_DSN: ${PG_DSN:-}
    command: alembic upgrade head
    volumes:
      - .:/app
    restart: "no"

  shop_api:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      PG_DSN: ${PG_DSN:-}
    restart: always
    ports:
      - 8080:8080

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./settings/prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    restart: always

volumes:
  postgres_data:
