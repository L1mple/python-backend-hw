name: CI/CD Pipeline HW5

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'hw2/hw/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'hw2/hw/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    defaults:
      run:
        working-directory: hw2/hw
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5  # Обновлено до v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4  # Обновлено до v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('hw2/hw/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
    
    - name: Lint with flake8 (optional)
      run: |
        pip install flake8
        # Остановить сборку при синтаксических ошибках или неопределенных именах
        flake8 shop_api --count --select=E9,F63,F7,F82 --show-source --statistics
        # Предупреждения для остального кода
        flake8 shop_api --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Run tests with coverage
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        pytest --cov=shop_api --cov-report=xml --cov-report=term-missing --cov-fail-under=95 test_homework2.py new_test.py -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4  # Обновлено до v4
      with:
        file: ./hw2/hw/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}  # Добавлен токен
    
    - name: Upload coverage reports to GitHub
      uses: actions/upload-artifact@v4  # ← Исправлено: v3 → v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: hw2/hw/coverage.xml

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    defaults:
      run:
        working-directory: hw2/hw
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5  # Обновлено до v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test application startup
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -c "from shop_api.main import app; print('✅ Application starts successfully')"