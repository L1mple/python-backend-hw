name: "HW5 Tests"

on:
  pull_request:
    branches: [ main ]
    paths: 
      - 'hw5/hw/**'
      - '.github/workflows/h5-tests.yml'
  push:
    branches: [ main ]
    paths: 
      - 'hw5/hw/**'
      - '.github/workflows/h5-tests.yml'

jobs:
  test-hw5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    
    # ✅ Cache pour accélérer les builds
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # ✅ Cache les dépendances
        cache-dependency-path: 'hw5/hw/requirements-test.txt'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('hw5/hw/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          nc -z localhost 5432 && echo "PostgreSQL is ready!" && break
          echo "Waiting for PostgreSQL... attempt $i"
          sleep 2
        done

    - name: Install dependencies
      working-directory: hw5/hw
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    - name: Run tests with coverage
      working-directory: hw5/hw
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest --cov=shop_api --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: hw5/hw/coverage.xml
        flags: unittests
        fail_ci_if_error: false

    - name: Check 95% coverage threshold
      working-directory: hw5/hw
      run: |
        python -m coverage report --fail-under=95