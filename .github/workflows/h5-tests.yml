name: "HW5 Tests"

on:
  pull_request:
    branches: [ main ]
    paths: [ 'hw5/hw/**' ]
  push:
    branches: [ main ]
    paths: [ 'hw5/hw/**' ]

jobs:
  test-hw5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # üîé √âtape de diagnostic am√©lior√©e
    - name: Afficher la structure du projet
      run: |
        echo "=== Structure du projet ==="
        pwd
        echo "=== Contenu de hw5/hw ==="
        ls -la hw5/hw/ || echo "hw5/hw/ non trouv√©"
        echo "=== Fichier database.py existe ? ==="
        ls -la hw5/hw/database.py || echo "database.py non trouv√©"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: hw5/hw
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    # üéØ CORRECTION : D√©finir PYTHONPATH APR√àS l'installation
    - name: D√©finir PYTHONPATH
      working-directory: hw5/hw
      run: |
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
        echo "PYTHONPATH d√©fini sur: $(pwd)"

    # üß™ Lancement des tests avec diagnostic
    - name: Run tests with coverage
      working-directory: hw5/hw
      env:
        DATABASE_URL: postgresql://postgres:password@postgres:5432/test_db
        # PYTHONPATH est d√©j√† d√©fini dans l'√©tape pr√©c√©dente
      run: |
        echo "=== Diagnostic avant tests ==="
        echo "R√©pertoire courant: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        echo "Fichiers pr√©sents:"
        ls -la
        echo "=== Chemins Python ==="
        python -c "import sys; print('\n'.join(sys.path))"
        echo "=== Test d'import database ==="
        python -c "from database import Base; print('‚úÖ Import database r√©ussi')" || echo "‚ùå Import database √©chou√©"
        echo "=== Lancement des tests ==="
        pytest --cov=shop_api --cov-report=xml --cov-report=term-missing -v
      - name: Run tests with coverage
      working-directory: hw5/hw
      env:
        DATABASE_URL: postgresql://postgres:password@postgres:5432/test_db
        # CORRECTION : PYTHONPATH doit inclure les chemins syst√®me + votre projet
        PYTHONPATH: /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages:/home/runner/work/python-backend-hw/python-backend-hw/hw5/hw
      run: |
        echo "=== Diagnostic avant tests ==="
        echo "R√©pertoire courant: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        echo "=== Test d'import database ==="
        python -c "
        import sys
        print('Chemins Python:')
        for path in sys.path:
            print(f'  - {path}')
        try:
            from database import Base
            print('‚úÖ Import database R√âUSSI')
        except ImportError as e:
            print(f'‚ùå Import database √âCHOU√â: {e}')
            # Essayer l'import absolu
            import importlib.util
            spec = importlib.util.spec_from_file_location('database', './database.py')
            database = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(database)
            print('‚úÖ Import absolu database R√âUSSI')
        "
        echo "=== Lancement des tests ==="
        pytest --cov=shop_api --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: hw5/hw/coverage.xml
        flags: unittests
        fail_ci_if_error: false

    - name: Check 95% coverage threshold
      working-directory: hw5/hw
      run: |
        python -m coverage report --fail-under=95