name: "HW5 Tests"

on:
  pull_request:
    branches: [ main ]
    paths: [ 'hw5/hw/**' ]
  push:
    branches: [ main ]
    paths: [ 'hw5/hw/**' ]

jobs:
  test-hw5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # üîé √âtape de diagnostic : afficher l‚Äôarborescence compl√®te
    - name: Afficher le r√©pertoire courant et son contenu
      run: |
        echo "R√©pertoire racine du d√©p√¥t :"
        pwd
        ls -R hw5 || true

    # üß≠ D√©finir le PYTHONPATH sur le bon dossier
    - name: D√©finir le PYTHONPATH
      run: |
        echo "D√©finition du PYTHONPATH..."
        echo "PYTHONPATH=${{ github.workspace }}/hw5/hw" >> $GITHUB_ENV
        echo "PYTHONPATH d√©fini sur : ${{ github.workspace }}/hw5/hw"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: hw5/hw
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    # ‚öôÔ∏è Installation du package local (facultatif, mais utile si setup.py/pyproject.toml existe)
    - name: Install local package
      working-directory: hw5/hw
      run: |
        pip install -e .

    # üß™ Lancement des tests avec couverture
    - name: Run tests with coverage
      working-directory: hw5/hw
      env:
        DATABASE_URL: postgresql://postgres:password@postgres:5432/test_db
        PYTHONPATH: ${{ github.workspace }}/hw5/hw
      run: |
        echo "Chemins utilis√©s par Python :"
        python -c "import sys; print(sys.path)"
        pytest --cov=shop_api --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: hw5/hw/coverage.xml
        flags: unittests
        fail_ci_if_error: false

    - name: Check 95% coverage threshold
      working-directory: hw5/hw
      run: |
        python -m coverage report --fail-under=95
