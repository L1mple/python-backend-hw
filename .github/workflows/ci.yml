name: hw5 tests

on:
  push:
    branches: [ "**" ]
    paths:
      - "lecture4/hw5/**"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "lecture4/hw5/**"
      - ".github/workflows/ci.yml"

jobs:
  unit:
    name: unit (sqlite) py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    defaults:
      run:
        working-directory: lecture4/hw5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests1
        env:
          PYTHONPATH: .
        run: pytest

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-py${{ matrix.python-version }}
          path: lecture4/hw5/coverage.xml
          if-no-files-found: ignore

  postgres:
    name: integration (postgres)
    runs-on: ubuntu-latest
    needs: unit
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: shop
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test -d shop"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    defaults:
      run:
        working-directory: lecture4/hw5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov psycopg2-binary

      - name: Run tests2
        env:
          PYTHONPATH: .
          DATABASE_URL: postgresql+psycopg2://test:test@localhost:5432/shop
        run: pytest -q

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-postgres
          path: lecture4/hw5/coverage.xml
          if-no-files-found: ignore
