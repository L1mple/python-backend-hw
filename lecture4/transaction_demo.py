import threading
import time
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from shop_api.main import Base, ItemDB

def create_engine_with_isolation(isolation_level):
    return create_engine(
        "sqlite:///file:memdb1?mode=memory&cache=shared",
        connect_args={"check_same_thread": False, "uri": True},
        isolation_level=isolation_level
    )

def setup_test_data():
    engine = create_engine("sqlite:///file:memdb1?mode=memory&cache=shared",
                          connect_args={"check_same_thread": False, "uri": True})
    Base.metadata.create_all(engine)
    
    Session = sessionmaker(bind=engine)
    session = Session()
    
    session.query(ItemDB).delete()
    
    test_item = ItemDB(name="Test Item", price=100.0, deleted=False)
    session.add(test_item)
    session.commit()
    session.close()
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã: —Ç–æ–≤–∞—Ä —Å —Ü–µ–Ω–æ–π 100‚ÇΩ")

def demo_dirty_read():
    print("\n" + "="*60)
    print("üîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø DIRTY READ")
    print("="*60)
    
    engine1 = create_engine_with_isolation("READ UNCOMMITTED")
    engine2 = create_engine_with_isolation("READ UNCOMMITTED")
    
    Session1 = sessionmaker(bind=engine1)
    Session2 = sessionmaker(bind=engine2)
    
    def transaction1():
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ù–∞—á–∏–Ω–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã...")
        session = Session1()
        try:
            item = session.query(ItemDB).first()
            if item:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ú–µ–Ω—è—é —Ü–µ–Ω—É —Å {item.price}‚ÇΩ –Ω–∞ 999‚ÇΩ")
                item.price = 999.0
                session.flush()
                print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –ë–î (–Ω–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)")
                time.sleep(3)
                print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ü–µ—Ä–µ–¥—É–º–∞–ª! –û—Ç–∫–∞—Ç—ã–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
                session.rollback()
                print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã")
        finally:
            session.close()
    
    def transaction2():
        time.sleep(1)
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ß–∏—Ç–∞—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞...")
        session = Session2()
        try:
            item = session.query(ItemDB).first()
            if item:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –í–∏–∂—É —Ü–µ–Ω—É = {item.price}‚ÇΩ")
                print("‚ùå DIRTY READ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 —É–≤–∏–¥–µ–ª –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")
        finally:
            session.close()
    
    t1 = threading.Thread(target=transaction1)
    t2 = threading.Thread(target=transaction2)
    
    t1.start()
    t2.start()
    t1.join()
    t2.join()

def demo_non_repeatable_read():
    print("\n" + "="*60)
    print("üîÑ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø NON-REPEATABLE READ")
    print("="*60)
    print("‚ö†Ô∏è  SQLite –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ READ UNCOMMITTED –∏ SERIALIZABLE")
    print("   –ò—Å–ø–æ–ª—å–∑—É–µ–º READ UNCOMMITTED –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
    
    engine1 = create_engine_with_isolation("READ UNCOMMITTED")
    engine2 = create_engine_with_isolation("READ UNCOMMITTED")
    
    Session1 = sessionmaker(bind=engine1)
    Session2 = sessionmaker(bind=engine2)
    
    def transaction1():
        time.sleep(1)
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ú–µ–Ω—è—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞...")
        session = Session1()
        try:
            item = session.query(ItemDB).first()
            if item:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ú–µ–Ω—è—é —Ü–µ–Ω—É —Å {item.price}‚ÇΩ –Ω–∞ 200‚ÇΩ")
                item.price = 200.0
                session.commit()
                print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
        finally:
            session.close()
    
    def transaction2():
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ß–∏—Ç–∞—é —Ü–µ–Ω—É –ø–µ—Ä–≤—ã–π —Ä–∞–∑...")
        session = Session2()
        try:
            item = session.query(ItemDB).first()
            if item:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ü–µ—Ä–≤–æ–µ —á—Ç–µ–Ω–∏–µ - —Ü–µ–Ω–∞ = {item.price}‚ÇΩ")
            
            time.sleep(2)
            
            print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ß–∏—Ç–∞—é —Ü–µ–Ω—É –≤—Ç–æ—Ä–æ–π —Ä–∞–∑...")
            item = session.query(ItemDB).first()
            if item:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –í—Ç–æ—Ä–æ–µ —á—Ç–µ–Ω–∏–µ - —Ü–µ–Ω–∞ = {item.price}‚ÇΩ")
                print("‚ùå NON-REPEATABLE READ! –¶–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –º–µ–∂–¥—É —á—Ç–µ–Ω–∏—è–º–∏!")
        finally:
            session.close()
    
    t1 = threading.Thread(target=transaction1)
    t2 = threading.Thread(target=transaction2)
    
    t2.start()
    t1.start()
    t1.join()
    t2.join()

def demo_phantom_read():
    print("\n" + "="*60)
    print("üëª –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø PHANTOM READ")
    print("="*60)
    print("‚ö†Ô∏è  SQLite –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ READ UNCOMMITTED –∏ SERIALIZABLE")
    print("   –ò—Å–ø–æ–ª—å–∑—É–µ–º READ UNCOMMITTED –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
    
    engine1 = create_engine_with_isolation("READ UNCOMMITTED")
    engine2 = create_engine_with_isolation("READ UNCOMMITTED")
    
    Session1 = sessionmaker(bind=engine1)
    Session2 = sessionmaker(bind=engine2)
    
    def transaction1():
        time.sleep(1)
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä...")
        session = Session1()
        try:
            new_item = ItemDB(name="–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä", price=300.0, deleted=False)
            session.add(new_item)
            session.commit()
            print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!")
        finally:
            session.close()
    
    def transaction2():
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –°—á–∏—Ç–∞—é —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–≤—ã–π —Ä–∞–∑...")
        session = Session2()
        try:
            count = session.query(ItemDB).count()
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ü–µ—Ä–≤—ã–π –ø–æ–¥—Å—á–µ—Ç - {count} —Ç–æ–≤–∞—Ä–æ–≤")
            
            time.sleep(2)
            
            print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –°—á–∏—Ç–∞—é —Ç–æ–≤–∞—Ä—ã –≤—Ç–æ—Ä–æ–π —Ä–∞–∑...")
            count = session.query(ItemDB).count()
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –í—Ç–æ—Ä–æ–π –ø–æ–¥—Å—á–µ—Ç - {count} —Ç–æ–≤–∞—Ä–æ–≤")
            print("‚ùå PHANTOM READ! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!")
        finally:
            session.close()
    
    t1 = threading.Thread(target=transaction1)
    t2 = threading.Thread(target=transaction2)
    
    t2.start()
    t1.start()
    t1.join()
    t2.join()

def demo_serializable():
    print("\n" + "="*60)
    print("üîí –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø SERIALIZABLE (–†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú)")
    print("="*60)
    
    engine1 = create_engine_with_isolation("SERIALIZABLE")
    engine2 = create_engine_with_isolation("SERIALIZABLE")
    
    Session1 = sessionmaker(bind=engine1)
    Session2 = sessionmaker(bind=engine2)
    
    def transaction1():
        time.sleep(1)
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –ü—ã—Ç–∞—é—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä...")
        session = Session1()
        try:
            new_item = ItemDB(name="–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–æ–≤–∞—Ä", price=400.0, deleted=False)
            session.add(new_item)
            session.commit()
            print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e:
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: –û—à–∏–±–∫–∞ - {e}")
            session.rollback()
        finally:
            session.close()
    
    def transaction2():
        print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –°—á–∏—Ç–∞—é —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–≤—ã–π —Ä–∞–∑...")
        session = Session2()
        try:
            count = session.query(ItemDB).count()
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –ü–µ—Ä–≤—ã–π –ø–æ–¥—Å—á–µ—Ç - {count} —Ç–æ–≤–∞—Ä–æ–≤")
            
            time.sleep(2)
            
            print("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –°—á–∏—Ç–∞—é —Ç–æ–≤–∞—Ä—ã –≤—Ç–æ—Ä–æ–π —Ä–∞–∑...")
            count = session.query(ItemDB).count()
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –í—Ç–æ—Ä–æ–π –ø–æ–¥—Å—á–µ—Ç - {count} —Ç–æ–≤–∞—Ä–æ–≤")
            print("‚úÖ SERIALIZABLE! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!")
        except Exception as e:
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: –û—à–∏–±–∫–∞ - {e}")
            session.rollback()
        finally:
            session.close()
    
    t1 = threading.Thread(target=transaction1)
    t2 = threading.Thread(target=transaction2)
    
    t2.start()
    t1.start()
    t1.join()
    t2.join()

def main():
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú –¢–†–ê–ù–ó–ê–ö–¶–ò–ô")
    print("="*60)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å")
    print("–∫–æ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ë–î")
    print("="*60)
    
    setup_test_data()
    
    demo_dirty_read()
    demo_non_repeatable_read()
    demo_phantom_read()
    demo_serializable()
    
    print("\n" + "="*60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("="*60)
    print("–í—ã–≤–æ–¥—ã:")
    print("‚Ä¢ READ UNCOMMITTED - –±—ã—Å—Ç—Ä—ã–π, –Ω–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π")
    print("‚Ä¢ READ COMMITTED - –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç Dirty Read")
    print("‚Ä¢ REPEATABLE READ - –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç Non-Repeatable Read")
    print("‚Ä¢ SERIALIZABLE - —Å–∞–º—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π, –Ω–æ –º–µ–¥–ª–µ–Ω–Ω—ã–π")

if __name__ == "__main__":
    main()
